#include <iostream>
using namespace std;
const int n=3;
void Formomatricen(int X[][n],int m);
void VektoriAntPozNegTeMatricesa(int Y[][n],int m, int P[],int &poz, int N[],int &neg);
void SortoVektorin(int A[],int z);
void ShtypVektorin(int Z[],int x);
int main()
{
    const int m=3;
    int A[m][n];
    int P[m*n];
    int N[m*n];
    int poz=0, neg=0;
    Formomatricen(A, m);
    VektoriAntPozNegTeMatricesa(A,m,P,poz,N,neg);
    SortoVektorin(P,poz);
    SortoVektorin(N,neg);
    cout<<"\nVektori me anetar pozitiv: ";
    ShtypVektorin(P,poz);
    cout<<"\nVektori me anetar negativ: ";
    ShtypVektorin(N,neg);
    return 0;
}
//Formimi i matrices
void Formomatricen(int X[][n],int m)
{
    for (int i=0; i<m; i++)
    {
        for (int j=0; j<m; j++)
        {
            cout<<"A["<<i+1<<"]"<<"["<<j+1<<"]=";
            cin>>X[i][j];
        }
    }
}
//Antaret pozitiv negativ te matrices
void VektoriAntPozNegTeMatricesa(int Y[][n],int m, int P[],int &poz, int N[],int &neg)
{
    poz=0;
    neg=0;
    for (int i=0; i<m; i++)
    {
        for (int j=0; j<n; j++)
        {
            if (Y[i][j]>0)
            {
                P[poz]=Y[i][j];
                poz=poz+1;
            }
            else
            {
                N[neg]=Y[i][j];
                neg=neg+1;
            }
        }
    }
}
//Sortimi i vektorit
void SortoVektorin(int A[],int z)
{
    int b;
    for (int i=0; i<z; i++)
    { 
        for (int j=i+1; j<z;j++)
        {
            if (A[i]>A[j])
            {
                b=A[i];
                A[i]=A[j];
                A[j]=b;
            }
            
        }
    }
}
//Shtypja e vektorit
void ShtypVektorin(int Z[],int x)
{
    cout<<"{";
    for (int i=0; i<x; i++)
    {
        cout<<Z[i];
        if (i<(x-1))
        {
            cout<<", ";
        }
    }
    cout<<"}"<<endl;
}
